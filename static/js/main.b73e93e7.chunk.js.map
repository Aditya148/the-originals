{"version":3,"sources":["logo.svg","components/NavigationBar.js","Home.js","About.js","Browse.js","components/Gallery.js","NoMatch.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","style","textAlign","margin","GridWrapper","Home","props","Jumbotron","About","Browse","Gallery","activeItem","length","showControls","showIndicators","className","slide","itemId","src","alt","Wrapper","NoMatch","StyledSideNav","SideNav","onItemClick","path","setState","activePath","state","location","pathname","items","name","css","key","this","map","item","active","React","Component","RouterSideNav","withRouter","StyledNavItem","NavItem","handleClick","to","onClick","NavIcon","Sidebar","App","Fragment","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b73e93e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\r\n\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div\r\n`.navbar { background-color: #222; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    float: \"right\";\r\n    display: inline-block;   \r\n    text-align: center;\r\n    color: #9FFFCB;\r\n    &:hover { color: white; text-decoration:none; }\r\n  }\r\n  .nav-link{\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    padding-right: 2em;\r\n    margin:auto;\r\n  }\r\n  .nav.item{\r\n    margin: auto;\r\n    display:inline-block;\r\n  }\r\n  .navbar-brand {\r\n    margin: auto;\r\n    font-size: 1.4em;\r\n    color: orange;\r\n    &:hover { color: darkorange; font-size: 1.6em; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n    top: 15%;\r\n  }`;\r\n  export const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand href=\"#\" style={{textAlign:\"center\", margin: \"auto\"}}><strong>Originals</strong></Navbar.Brand>\r\n      {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/> */}\r\n       {/* <Form className=\"form-center\">\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\r\n      </Form>          */}\r\n    </Navbar>\r\n  </Styles>\r\n)","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport styled from 'styled-components';const GridWrapper = styled.div`\r\nwidth: 70%;\r\nmargin: auto;\r\ntext-align: center;\r\n`;export const Home = (props) => (\r\n  <GridWrapper>\r\n    <Jumbotron>\r\n      <h3>This is a Home Page</h3>\r\n    </Jumbotron>\r\n  </GridWrapper>\r\n)","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport styled from 'styled-components';const GridWrapper = styled.div`\r\nwidth: 70%;\r\nmargin: auto;\r\ntext-align: center;\r\n`; export const About = () => (\r\n  <GridWrapper>\r\n    <Jumbotron>\r\n      <h3>This is a About Page</h3>\r\n    </Jumbotron>\r\n  </GridWrapper>\r\n)","import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl, Jumbotron } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst GridWrapper = styled.div`\r\n  width: 70%;\r\n  margin: auto;\r\n  text-align: center;\r\n`;export const Browse = (props) => (\r\n  <GridWrapper>\r\n      <Jumbotron>\r\n          <h3>This is a Blog Post</h3>\r\n      </Jumbotron>\r\n  </GridWrapper>\r\n)","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer } from\r\n\"mdbreact\";\r\n\r\nconst GridWrapper = styled.div`\r\n  width: 60%;\r\n  height: 300px;\r\n  overflow: hidden;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Gallery = (props) => {\r\n  return (\r\n    <GridWrapper>\r\n    <MDBContainer>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={3}\r\n        showControls={true}\r\n        showIndicators={false}\r\n        className=\"z-depth-1\"\r\n        slide\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem itemId=\"1\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(45).jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"2\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(46).jpg\"\r\n                alt=\"Second slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"3\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(47).jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n    </GridWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';const Wrapper = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 6em;\r\n  margin-right: 6em;\r\n`;export const NoMatch = () => (\r\n  <Wrapper>\r\n    <h2>No Match</h2>\r\n  </Wrapper>\r\n)","import React from 'react';\r\nimport styled from \"styled-components\";/* This defines the actual bar going down the screen */\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 75px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 3.4em;      /* Stay at the top */\r\n  background-color: #222; /* Black */\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: props.location.pathname,\r\n          items: [\r\n            {\r\n              path: '/', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Home',\r\n              css: 'fa fa-fw fa-home',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/about',\r\n              name: 'About',\r\n              css: 'fa fa-fw fa-clock',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/Browse',\r\n              name: 'Browse',\r\n              css: 'fa fa-fw fa-search',\r\n              key: 3\r\n            },\r\n            {\r\n              path: '/Gallery',\r\n              name: 'Gallery',\r\n              css: 'fa fa-fw fa-search',\r\n              key: 3\r\n            },\r\n            {\r\n              path: '/NoMatch',\r\n              name: 'NoMatch',\r\n              css: 'fas fa-hashtag',\r\n              key: 4\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n      onItemClick = (path) => {\r\n        this.setState({ activePath: path }); /* Sets activePath which causes rerender which causes CSS to change */\r\n      }\r\n      render() {\r\n        const { items, activePath } = this.state;\r\n        return (\r\n          <StyledSideNav>\r\n            {\r\n              /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n              items.map((item) => {\r\n                /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                  <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n                )\r\n              })\r\n            }\r\n          </StyledSideNav>\r\n        );\r\n      }\r\n}\r\n\r\nconst RouterSideNav = withRouter(SideNav);\r\n\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n      text-decoration: none;\r\n      opacity: 0.6;\r\n    font-size: 2.7em;\r\n    color: ${(props) => props.active ? \"teal\" : \"grey\"};\r\n    :hover {\r\n      opacity: 1.0;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n      }\r\n    render() {\r\n        const { active } = this.props;\r\n        return (    \r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\nconst NavIcon = styled.div``;\r\n\r\nexport default class Sidebar extends React.Component {\r\n    render() {\r\n      return (\r\n        <RouterSideNav></RouterSideNav>\r\n      );\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from './components/NavigationBar';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Browse } from './Browse';\nimport { Gallery } from './components/Gallery';\nimport { NoMatch } from './NoMatch';\nimport Sidebar from './components/Sidebar';\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <NavigationBar />\n\n        <Sidebar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/Browse\" component={Browse} />\n          <Route path=\"/Gallery\" component={Gallery} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n    // <div className=\"App\">\n      \n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}