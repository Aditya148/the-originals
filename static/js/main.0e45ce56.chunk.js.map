{"version":3,"sources":["logo.svg","components/NavigationBar.js","Home.js","About.js","NoMatch.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Form","className","FormControl","type","placeholder","Collapse","id","Nav","Item","Link","GridWrapper","Home","props","About","Wrapper","NoMatch","StyledSideNav","SideNav","onItemClick","path","setState","activePath","state","location","pathname","items","name","css","key","this","map","item","active","React","Component","RouterSideNav","withRouter","StyledNavItem","NavItem","handleClick","to","onClick","NavIcon","Sidebar","App","Fragment","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e45ce56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\r\n\r\nimport styled from 'styled-components';const Styles = styled.div\r\n`.navbar { background-color: #222; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand {\r\n    font-size: 1.4em;\r\n    color: orange;\r\n    &:hover { color: white; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }`;\r\n  export const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand href=\"/\"><strong>Originals</strong></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Form className=\"form-center\">\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\r\n      </Form>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item> \r\n          <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';const GridWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  margin-top: 1em;\r\n  margin-left: 6em;\r\n  margin-right: 6em;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-auto-rows: minmax(25px, auto);\r\n`;export const Home = (props) => (\r\n  <GridWrapper>\r\n    <p>This is a paragraph and I am writing on the home page</p>\r\n    <p>This is another paragraph, hi hey hello whatsup yo</p>\r\n  </GridWrapper>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';const GridWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  margin-top: 1em;\r\n  margin-left: 6em;\r\n  margin-right: 6em;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-auto-rows: minmax(25px, auto);\r\n`; export const About = () => (\r\n  <GridWrapper>\r\n    <h2>About Page</h2>\r\n    <p>State at ceiling lay on arms while you're using the keyboard so this human feeds me.</p>\r\n    <p>I am a kitty cat, sup, feed me, no cares in the world</p>\r\n    <p>Meow meow, I tell my human purr for no reason but to chase after</p>\r\n  </GridWrapper>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';const Wrapper = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 6em;\r\n  margin-right: 6em;\r\n`;export const NoMatch = () => (\r\n  <Wrapper>\r\n    <h2>No Match</h2>\r\n  </Wrapper>\r\n)","import React from 'react';\r\nimport styled from \"styled-components\";/* This defines the actual bar going down the screen */\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 75px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 3.4em;      /* Stay at the top */\r\n  background-color: #222; /* Black */\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: props.location.pathname,\r\n          items: [\r\n            {\r\n              path: '/', /* path is used as id to check which NavItem is active basically */\r\n              name: 'Home',\r\n              css: 'fa fa-fw fa-home',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/about',\r\n              name: 'About',\r\n              css: 'fa fa-fw fa-clock',\r\n              key: 2\r\n            },\r\n            {\r\n              path: '/NoMatch',\r\n              name: 'NoMatch',\r\n              css: 'fas fa-hashtag',\r\n              key: 3\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n      onItemClick = (path) => {\r\n        this.setState({ activePath: path }); /* Sets activePath which causes rerender which causes CSS to change */\r\n      }\r\n      render() {\r\n        const { items, activePath } = this.state;\r\n        return (\r\n          <StyledSideNav>\r\n            {\r\n              /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n              items.map((item) => {\r\n                /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                  <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n                )\r\n              })\r\n            }\r\n          </StyledSideNav>\r\n        );\r\n      }\r\n}\r\n\r\nconst RouterSideNav = withRouter(SideNav);\r\n\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    font-size: 2.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n      }\r\n    render() {\r\n        const { active } = this.props;\r\n        return (    \r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n      );\r\n    }\r\n  }\r\n\r\nconst NavIcon = styled.div``;\r\n\r\nexport default class Sidebar extends React.Component {\r\n    render() {\r\n      return (\r\n        <RouterSideNav></RouterSideNav>\r\n      );\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from './components/NavigationBar';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { NoMatch } from './NoMatch';\nimport Sidebar from './components/Sidebar';\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <NavigationBar />\n\n        <Sidebar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n    // <div className=\"App\">\n      \n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}